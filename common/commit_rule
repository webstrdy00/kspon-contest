################
# <타입> : <제목> 의 형식으로 제목을 아래 공백줄에 작성
# 제목은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성 / 끝에 마침표 금지
# 예) FEAT: 로그인 기능 추가

# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)

################
# 본문(구체적인 내용)을 아랫줄에 작성
# 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)

################
# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)
# 예) Close #7

################
# FEAT: 새로운 기능 추가
# FIX: 버그 수정
# DOCS: 문서 수정
# STYLE: 스타일 관련 기능(코드 포맷팅, 세미콜론 누락, 코드 자체의 변경이 없는 경우)
# REFACTOR: 코드 리팩토링
# TEST: 테스트 코드 추가
# CHORE: 빌드 업무 수정, 패키지 매니저 수정(ex .gitignore 수정 같은 경우)
################

 FEAT: KSPON 콘테스트 플랫폼 초기 프로젝트 구조 구축

 [상세 내용]
- Next.js 15 기반 프론트엔드 애플리케이션 초기 설정
- 인증, 대시보드, 제안서, 리포트 등 8개 주요 페이지 라우트 생성
- shadcn/ui 기반 40+ 재사용 가능한 UI 컴포넌트 라이브러리 구축
- 사용자 인증 시스템 컴포넌트 구조 설계 (로그인/회원가입 폼)
 - 대시보드 분석 도구 컴포넌트 구현 (예산 성과 분석, 공급수요 지도)
- 프로필 관리 및 활동 추적 컴포넌트 개발
- 제안서 생성, 조회, 관리 시스템 컴포넌트 구조 완성